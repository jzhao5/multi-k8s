---
version: 0.2
env:
  variables:
      BC_SOURCE: "codebuild"
  parameter-store:
      BC_API_KEY: "bridgecrew_api_key"
phases:
  install:
    commands:     
      - curl -sS -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/aws-iam-authenticator
      - curl -sS -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.14.6/2019-08-22/bin/linux/amd64/kubectl
      - chmod +x ./kubectl ./aws-iam-authenticator
      - export PATH=$PWD/:$PATH
      - apt-get update && apt-get -y install jq python3-pip python3-dev && pip3 install --upgrade awscli
      - pip3 install bridgecrew
      - echo Installing codebuild-extras...
      - curl -fsSL https://raw.githubusercontent.com/bridgecrewio/aws-codebuild-extras/master/install >> extras.sh
      - . ./extras.sh
  pre_build:
      commands:
        - TAG="$REPOSITORY_NAME.$REPOSITORY_BRANCH.$ENVIRONMENT_NAME.$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
       ## - sed -i 's@149083378091.dkr.ecr.us-east-1.amazonaws.com/multi-client@'"$REPOSITORY_URI1:$TAG"'@' ./k8s/client-deployment.yml
       ## - sed -i 's@149083378091.dkr.ecr.us-east-1.amazonaws.com/multi-server@'"$REPOSITORY_URI2:$TAG"'@' ./k8s/server-deployment.yml
       ## - sed -i 's@149083378091.dkr.ecr.us-east-1.amazonaws.com/multi-worker@'"$REPOSITORY_URI3:$TAG"'@' ./k8s/worker-deployment.yml
        - REPOSITORY_URI_1=149083378091.dkr.ecr.us-east-1.amazonaws.com/multi-client
        - REPOSITORY_URI_2=149083378091.dkr.ecr.us-east-1.amazonaws.com/multi-server
        - REPOSITORY_URI_3=149083378091.dkr.ecr.us-east-1.amazonaws.com/multi-worker
        - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
        - $(aws ecr get-login --no-include-email)
        - export KUBECONFIG=$HOME/.kube/config
  build:
    commands:
         - echo Build started on `date`
         - echo Building the Docker image...
         - echo $CODEBUILD_SRC_DIR
         - docker build -t $REPOSITORY_URI_1 ./client
         - docker tag $REPOSITORY_URI_1:latest $REPOSITORY_URI_1:$TAG
      ##   - docker push $REPOSITORY_URI_1:latest
         - docker build -t $REPOSITORY_URI_2 ./server
         - docker tag $REPOSITORY_URI_2:latest $REPOSITORY_URI_2:$TAG
      ##   - docker push $REPOSITORY_URI_2:latest
         - docker build -t $REPOSITORY_URI_3 ./worker
         - docker tag $REPOSITORY_URI_3:latest $REPOSITORY_URI_3:$TAG
      ##   - docker push $REPOSITORY_URI_3:latest

  post_build:
    commands:
      - docker push $REPOSITORY_URI_1:$TAG
      - docker push $REPOSITORY_URI_2:$TAG
      - docker push $REPOSITORY_URI_3:$TAG
      - CREDENTIALS=$(aws sts assume-role --role-arn $EKS_KUBECTL_ROLE_ARN --role-session-name codebuild-kubectl --duration-seconds 900)
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME
      - kubectl apply -f k8s
     ## - kubectl set image deployments/client-deployment multi-client=$REPOSITORY_URI_1:$TAG
     ## - kubectl set image deployments/server-deployment multi-server=$REPOSITORY_URI_2:$TAG
     ## - kubectl set image deployments/worker-deployment multi-worker=$REPOSITORY_URI_3:$TAG
      - kubectl set image -n complexk8s deployments/client-deployment multi-client=$REPOSITORY_URI_1:$TAG
      - kubectl set image -n complexk8s deployments/server-deployment multi-server=$REPOSITORY_URI_2:$TAG
      - kubectl set image -n complexk8s deployments/worker-deployment multi-worker=$REPOSITORY_URI_3:$TAG
      - printf '[{"name":"complexk8s","imageUri":"%s"}]' $REPOSITORY_URI:$TAG > build.json
artifacts:
  files: build.json

